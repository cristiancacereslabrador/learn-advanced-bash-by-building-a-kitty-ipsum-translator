builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
redirect > stdout.txt
echo hello bash > stdout.txt
hello bash >> stdout.txt
echo hello bash >> stdout.txt
echo hello bash > stdout.txt
> stdout.txt
bad_command
bad_command > stderr.txt
stderr > stderr.txt
stderr > stderr.txt
bad_command 2> stderr.txt
echo helo bash > stdout.txt
echo hello bash > stdout.txt
echo hello bash > stdout.txt
> stdout.txt
echo hello bash > stdout.txt
echo hello bash 1 > stdout.txt
echo hello bash 1 > stdout.txt
echo hello bash > stdout.txt
echo hello bash > stdout.txt
echo hello bash > stdout.txt
> stdout.txt
> stdout.txt
echo hello bash > stdout.txt
__vsc_prompt_cmd_original
echo hello bash > stdout.txt
echo hello bash 1 >> stdout.txt
echo hello bash 1 > stdout.txt
echo hello bash > stdout.txt
echo "hello bash 1" > stdout.txt
bad_command 2 > stderr.txt
bad_command 2> stderr.txt
read NADME
read NAME
echo $NAME
echo $NAME > stdout.txt
echo freeCodeCamp > name.txt
read NADME=next.txt
read NADME < next.txt
read NADME < name.txt
read NAME < name.txt
echo $NAME
echo CRISTIAN
echo $name
echo $NAME
CAT
cat
cat name.txt
cat < name.txt
echo Cristian
touch script.sh
chmod +x
chmod +x script.sh
./script.sh
echo Cristian
echo Cristian
echo Cristian
echo Cristian
echo Cristian
echo Cristian
./script.sh < name.txt
./script.sh < stderr.txt
./script.sh 2 < name.txt > stderr.txt
./script.sh 2 < name.txt > stderr.txt > stdout.txt
cat kitty_ipsum.txt
cat kitty_ipsum1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
man wc
wc -l kitty_ipsum_1.txt
wc -w kitty_ipsum_1.txt
wc -c kitty_ipsum_1.txt
wc -m kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
wc < kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
echo -e "\nNumber of lines:"
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep 'meow' kitty_ipsum_1.txt
help grep
man grep
grep 'meow' --color kitty_ipsum_1.txt
grep 'meow' --color -l kitty_ipsum_1.txt
grep 'meow' --color -n kitty_ipsum_1.txt
grep meow[a-z]* --color -n kitty_ipsum_1.txt
echo Number of times meow or meowzer appears: >> kitty_info.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep --color 'meow[a-z]*' kitty_ipsum_1.txt
grep --color -c 'meow[a-z]*' kitty_ipsum_1.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
man grep
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
wc -l 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_info.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
echo -e "\Lines that they appear on::" >> kitty_info.txt
echo -e "\Lines that they appear on::" >> kitty_info.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
echo -n "\nLines that they appear on:" >> kitty_info.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man grep
cat name.txt
sed 's/r/2/' name.txt
sed 'free/r/f233/' name.txt
sed 'free/r/f233/' name.txt
sed 's/free/f233/' name.txt
__vsc_prompt_cmd_original
sed 'sfreecodecamp/f233C0d3C@mp'' name.txt sed 'sfreecodecamp/f233C0d3C@mp'' name.txt
sed 'sfreecodecamp/f233C0d3C@mp'' name.txt sed 's/freecodecamp/f233C0d3C@mp'' name.txt
sed 's/freecodecamp/f233C0d3C@mp' name.txt
sed 's/freecodecamp/f233C0d3C@mp/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat name.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man sed
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep --color 'cat[a-z]*' kitty_ipsum_1.txt
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -l 'cat[a-z]*' kitty_ipsum_1.txt
grep -m 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
wc -o 'cat[a-z]*' kitty_ipsum_1.txt
wc -l 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep -l 'cat[a-z]*' kitty_ipsum_1.txt
grep -l 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
sed 's/([0-9]+).*/\1/' name.txt
sed 's/([0-9]+).*/\1/' kitty_ipsum_1.txt
sed -n 's/([0-9]+).*/\1/' kitty_ipsum_1.txt
sed -e 's/([0-9]+).*/\1/' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
echo -e "\n\n~~ kitty_ipsum_2.txt info ~~" >> kitty_info.txt
echo -e "\n\Number of lines:" >> kitty_info.txt
echo -e "\number of lines:" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_2.txt
wc -l
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
echo -e "\nNumber of words:" >> kitty_info.txt
wc -m < kitty_ipsum_2.txt
wc -m < kitty_ipsum_2.txt >> kitty_info.txt
wc -m < kitty_ipsum_2.txt >> kitty_info.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
wc -m < kitty_ipsum_2.txt
wc -m > kitty_ipsum_2.txt
wc -m < kitty_ipsum_2.txt >> kitty_info.txt
grep -n 'meow[a-z]*' --color kitty_ipsum_2.txt
grep -n 'meow[a-z]*' --color kitty_ipsum_2.txt
grep -color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep -o 'meow[a-z]*' kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'cat[a-z]*' kitty_ipsum_2.txt
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
touch to create translate.sh
touch translate.sh
chmod +x translate.sh
cat
cat $1
./translate.sh
./translate.sh kitty_ipsum_1.txt
./translate.sh < kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
